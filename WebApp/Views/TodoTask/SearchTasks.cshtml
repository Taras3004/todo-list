@using WebApp.Models.ViewModels
@model List<ListNameTaskViewModel>

@{
    var options = ViewBag.QueryOptions as SearchQueryOptions ?? new SearchQueryOptions();
}

<h1>@ViewData["Title"]</h1>

<form asp-controller="TodoTask" asp-action="SearchTasks" method="get" class="mb-4">
    <div class="d-flex align-items-end gap-3 p-3 border rounded bg-light">

        <div class="form-group flex-grow-1">
            <label for="searchItem" class="form-label visually-hidden">Search Task Title:</label>
            <input type="text"
                   name="SearchItem"
                   id="searchItem"
                   class="form-control"
                   value="@options.SearchItem"
                   placeholder="Enter part of the task title..." />
        </div>

        <button type="submit" class="btn btn-primary">
            Search
        </button>

        <a href="@Url.Action("SearchTasks", "TodoTask")" class="btn btn-secondary">
            Clear
        </a>
    </div>
</form>

<hr />

@if (!Model.Any() && !string.IsNullOrEmpty(options.SearchItem))
{
    <div class="alert alert-info">
        No tasks found matching "@options.SearchItem".
    </div>
}
else if (!Model.Any())
{
    <div class="alert alert-info">
        There are no tasks available to search.
    </div>
}
else
{
    <div class="tasks-container d-flex flex-column align-items-center justify-content-center">
        @foreach (var taskModel in Model)
        {
            var task = taskModel.Instance;

            <div class="task">
                @{
                    bool isOverdue = task.Deadline.Date < DateTime.UtcNow.Date && !task.IsCompleted;
                    string taskTextClass = isOverdue ? "task-text overdue-highlight" : "task-text";
                }
                <div class="task-left">

                    <form asp-controller="TodoTaskEdit" asp-action="ToggleComplete" method="post" data-task-id="@task.Id" style="display: inline;">
                        <input type="hidden" name="id" value="@task.Id" />
                        <input type="checkbox" class="task-checkbox" name="isCompleted" value="true" checked="@task.IsCompleted" onchange="this.form.submit();">
                    </form>

                    <span class="@taskTextClass">
                        @task.Name
                        <span class="text-muted small"> (@taskModel.ListName)</span>
                    </span>

                    <span class="task-desc">due to @task.Deadline.ToString("dd MMM yyyy h:mm tt")</span>
                </div>

                <a class="btn btn-primary" asp-controller="TodoTaskPage" asp-action="Index" asp-route-taskId=@task.Id asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)">View</a>
                <a class="btn btn-primary" asp-controller="TodoTaskEdit" asp-action="Edit" asp-route-id=@task.Id asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)">Edit</a>
            </div>
        }
    </div>
}