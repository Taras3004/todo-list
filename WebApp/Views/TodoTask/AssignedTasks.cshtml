@using WebApi.Entities.TodoDb
@using WebApp.Models.ApiClients.TodoListApiClient
@using WebApp.Models.ViewModels
@model List<ListNameTaskViewModel>
@inject TodoApiClientContext ClientContext

@{
    List<TaskTag>? availableTags = ClientContext.GetEntitiesAsync<TaskTag>().Result;
    
    availableTags ??= new List<TaskTag>(); 
}

<form asp-controller="TodoTask" asp-action="AssignedTasks" method="get" class="mb-4">
    <div class="d-flex align-items-center gap-3">
        <div class="form-group">
            <label for="selectedTagId" class="form-label">Filter by Tag:</label>
            <select name="selectedTagId" id="selectedTagId" class="form-select" onchange="this.form.submit()">
                <option value="0">--- All Tags ---</option>

                @foreach (var tag in availableTags)
                {
                    bool isSelected = (ViewBag.QueryOptions as TaskQueryOptions)?.SelectedTagId == tag.Id;

                    <option value="@tag.Id" selected="@(isSelected)">@tag.Tag</option>
                }
            </select>
        </div>

        <button type="submit" class="btn btn-secondary visually-hidden">Submit</button>
    </div>
</form>


<form asp-controller="TodoTask" asp-action="AssignedTasks" method="get" class="mb-4">
    <div class="d-flex align-items-center gap-3">
        @{
            string currentFilterStatus = Context.Request.Query["filterStatus"]!;
            string currentSortBy = Context.Request.Query["sortBy"]!;
        }
        <div class="form-group">
            <label for="filterStatus" class="form-label">Status:</label>
            <select name="filterStatus" id="filterStatus" class="form-select" onchange="this.form.submit()">
                <option value="">All</option>
                <option value="pending" selected="@(currentFilterStatus == "pending")")>Not completed</option>
                <option value="completed" selected="@(currentFilterStatus == "completed")" )>Completed</option>
            </select>
        </div>

        <div class="form-group">
            <label for="sortBy" class="form-label">Sort by:</label>
            <select name="sortBy" id="sortBy" class="form-select" onchange="this.form.submit()">
                <option value="list" selected="@(currentSortBy == "list")")>By list (default)</option>
                <option value="deadline" selected="@(currentSortBy == "deadline")" )>By deadline</option>
                <option value="name" selected="@(currentSortBy == "name")" )>By name</option>
            </select>
        </div>

        <button type="submit" class="btn btn-secondary visually-hidden">Submit</button>
    </div>
</form>

<div class="tasks-container">
    @foreach (var task in Model)
    {
        <div class="task">
            @{
                bool isOverdue = task.Instance.Deadline.Date < DateTime.UtcNow && !task.Instance.IsCompleted;

                string taskTextClass = isOverdue ? "task-text overdue-highlight" : "task-text";
            }
            <div class="task-left">

                <form asp-controller="TodoTaskEdit"
                      asp-action="ToggleComplete"
                      method="post"
                      data-task-id="@task.Instance.Id"
                      style="display: inline;">

                    <input type="hidden" name="id" value="@task.Instance.Id" />

                    <input type="checkbox"
                           class="task-checkbox"
                           name="isCompleted"
                           value="true"
                           checked="@task.Instance.IsCompleted"
                           onchange="this.form.submit();">
                </form>

                <span class="@taskTextClass">@task.Instance.Name (@task.ListName)</span>
                <span class="task-desc">due to @task.Instance.Deadline.ToString("dd MMM yyyy h:mm tt")</span>
            </div>

            <a class="btn btn-primary"
               asp-controller="TodoTaskPage"
               asp-action="Index"
               asp-route-taskId=@task.Instance.Id
               asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)">
                View
            </a>

            <a class="btn btn-primary"
               asp-controller="TodoTaskEdit"
               asp-action="Edit"
               asp-route-id=@task.Instance.Id
               asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString)">
                Edit
            </a>
        </div>
    }
</div>